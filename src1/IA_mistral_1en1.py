'''
T√≠tulo del proyecto: "Sistema inteligente de extracci√≥n de datos de facturas"
Objetivo: Crear un programa que lea autom√°ticamente facturas en PDF y extraiga datos clave como el nombre del proveedor, fecha, monto total, etc.

¬øC√≥mo funciona?
Lectura de facturas: El sistema revisa una carpeta donde se colocan las facturas (PDFs). 
Pueden ser archivos que tienen texto digital o im√°genes escaneadas.

Procesamiento con inteligencia artificial (IA): Usamos IA para ‚Äúentender‚Äù cada factura, incluso si el dise√±o es diferente en cada una.

Extracci√≥n de datos: La IA detecta y extrae los datos importantes, sin necesidad de que alguien los escriba a mano.

¬øQu√© dificultad tiene?
Modelos de IA: Para que el sistema entienda bien las facturas, se usan modelos de inteligencia artificial. Existen modelos m√°s potentes y precisos, pero requieren computadoras muy potentes (m√°s memoria y tarjetas gr√°ficas mejores).

Limitaciones actuales: Como estoy usando una computadora personal que no es muy potente, estoy usando un modelo m√°s peque√±o (de 7 mil millones de par√°metros, llamado "modelo 7B"). Esto funciona, pero puede cometer m√°s errores o tardar m√°s que otros modelos m√°s grandes (por ejemplo, modelos 13B o 70B).

Lo positivo: A pesar de las limitaciones de hardware, el sistema ya es capaz de leer varias facturas autom√°ticamente desde una carpeta y procesarlas, lo que ahorra tiempo comparado con hacerlo manualmente.

¬øQu√© se necesitar√≠a para mejorar?
Si queremos m√°s precisi√≥n y velocidad, podr√≠amos usar modelos m√°s grandes, pero eso requiere:

Un mejor servidor (m√°s memoria y una buena GPU).

O pagar un servicio en la nube que nos permita usar esos modelos sin comprar el hardware.

¬øQu√© resultados se pueden esperar ahora?
El sistema es funcional, pero no perfecto.

Puede tener dificultades con algunas facturas complejas o muy mal escaneadas.

A medida que se optimiza o se mejora el hardware, se puede lograr un nivel de precisi√≥n m√°s alto.

Parte t√©cnica (para ti):
Dado que las facturas vienen en PDF (texto y escaneadas), necesitas:

OCR (Reconocimiento √ìptico de Caracteres):

Usa algo como Tesseract OCR para las facturas en imagen (o mejor a√∫n, PaddleOCR o Google Vision OCR, que son m√°s precisos).

Para PDFs con texto embebido, puedes usar PyMuPDF (fitz) o pdfplumber para extraer el texto directamente.

Modelos de lenguaje para extracci√≥n sem√°ntica:

Est√°s usando un modelo 7B, como un LLaMA 2 o Mistral 7B. Estos pueden funcionar, especialmente si los usas con instrucciones claras (instrucci√≥n tuning).

Mejores resultados los podr√≠as obtener con modelos como:

GPT-4 (si usas la API de OpenAI)

Claude 3 (Anthropic)

Gemini Pro (Google)

O modelos open-source m√°s grandes, como Mixtral 8x7B, LLaMA 3 13B, etc.

Estos √∫ltimos requieren:

GPU con al menos 24-48 GB de VRAM (para local)

O servicios como Hugging Face Inference Endpoints, Replicate, o OpenRouter.ai para ejecutarlos en la nube.

Formato de salida:
Excel
'''

import sys
from extract.pdf_reader import extraer_texto_pdf, convertir_pdf_a_imagenes
from extract.ocr_engine import imagen_a_texto
from ia.ollama_interface import extraer_datos_factura

def procesar_factura(path_pdf):
    tiene_texto, texto = extraer_texto_pdf(path_pdf)

    if not tiene_texto:
        print("Factura escaneada. Usando OCR...")
        imagenes = convertir_pdf_a_imagenes(path_pdf)
        texto = ""
        for imagen in imagenes:
            texto += imagen_a_texto(imagen) + "\n"

    print("\nüìÑ Texto extra√≠do:\n")
    print(texto[:1000])  # Solo muestra los primeros caracteres

    print("\nü§ñ Extrayendo datos con IA...")
    respuesta = extraer_datos_factura(texto)
    print("\nüßæ Datos extra√≠dos:\n")
    print("------------- Inicio -------------")
    print(respuesta)
    print("------------- Fin -------------")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Uso: python main.py ruta_a_factura.pdf")
        sys.exit(1)

    ruta_factura = sys.argv[1]
    procesar_factura(ruta_factura)
